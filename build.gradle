plugins {
    id 'base'
}

task installDependencies(type: Exec) {
    commandLine 'pip', 'install', '-r', 'requirements.txt'
}

task migrate {
    doLast {
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream()
        ByteArrayOutputStream errorStream = new ByteArrayOutputStream()

        def result = exec {
            commandLine 'python', 'manage.py', 'makemigrations'
            ignoreExitValue true
            standardOutput = outputStream
            errorOutput = errorStream
        }

        def output = outputStream.toString().trim()
        def error = errorStream.toString().trim()

        if (result.exitValue != 0) {
            throw new GradleException("\n$output\n$error")
        }

        println "\n$output"

        exec {
            commandLine 'python', 'manage.py', 'migrate'
        }
    }
}

task runServer(type: Exec) {
    commandLine 'python', 'manage.py', 'runserver'
}

task buildproject {
    dependsOn migrate, runServer
}